plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "edu.wpi.first.GradleRIO" version "2018.06.21"
    id 'org.hidetake.ssh' version "2.9.0"
}

def DEFAULT_TEAM = 5587
def ROBOT_CLASS = "org.frc5587.robot2018.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target('roborio', edu.wpi.first.gradlerio.frc.RoboRIO) {
            team = getTeamOrDefault(DEFAULT_TEAM)
        }
    }
    artifacts {
        artifact('frcJava', edu.wpi.first.gradlerio.frc.FRCJavaArtifact) {
            targets << 'roborio'
        }
    }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Toolsuite (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile pathfinder()
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}


/* ssh stuff copied from 449 */

remotes {
    rio {
        host = 'roboRIO-5587-frc.local'
        user = 'lvuser'
        knownHosts = allowAnyHosts
    }
}

task('copyResources') {
    doLast {
        ssh.run {
            session(remotes.rio) {
                execute 'mkdir ~/resources', ignoreError: true
                put from: fileTree('src/main/resources'), into: './resources/'
                execute ". /etc/profile.d/natinst-path.sh; /usr/local/frc/bin/frcKillRobot.sh -t -r", ignoreError: true
            }
        }
    }
}

wrapper {
    gradleVersion = '4.9'
}
